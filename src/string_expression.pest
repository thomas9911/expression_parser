calculation = _{ SOI ~ expr ~ EOI }

num = @{ int ~ ("." ~ ASCII_DIGIT*)? ~ (^"e" ~ int)? }
    int = { ("+" | "-")? ~ ASCII_DIGIT+ }

var = { (ASCII_ALPHANUMERIC | ":" | "_" )+ }

// string  = @{ "\"" ~ inner ~ "\"" }
//     inner   = { (!("\"" | "\\") ~ ANY)* ~ (escape ~ inner)? }
//     escape  = { "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t" | unicode) }
//     unicode = { "u" ~ ASCII_HEX_DIGIT{4} }

string  = @{ "\"" ~ letters ~ "\"" }
    letters = @{ (!("\"" | "\\") ~ char)* }
    char = _{ PUNCTUATION | LETTER | NUMBER | WHITESPACE }

operation = _{ string_operation | binary_operation | number_operation}

string_operation = _{ concat_op }
    concat_op = { "++" }

binary_operation = _{ equal | not_equal | and | or }
    equal     = { "==" }
    not_equal = { "!=" }
    and       = { "&" | "&&" |"and" }
    or        = { "|" | "||" | "or" }

number_operation = _{ power | add | subtract | multiply | divide }
    add      = { "+" }
    subtract = { "-" }
    multiply = { "*" }
    divide   = { "/" }
    power    = { "^" | "**" }

expr = !{ term ~ (operation ~ term)* }

func = ${ func_name ~ "(" ~  spaces ~ any_arguments ~ spaces ~ ")" }
    any_arguments = _{ one_or_more_arguments? }
    one_or_more_arguments = _{ spaces ~ expr ~ (spaces ~ COMMA ~ spaces ~ expr)* }

    func_name = { ('a'..'z')+ }

list = { "[" ~ any_arguments ~ "]"}

map = !{ "{" ~ map_item ~ (COMMA ~ map_item)* ~ "}" }
    map_item = _{ string ~ ":" ~ expr }

term = _{ num | "(" ~ expr ~ ")" | string | func | var | list | map }

WHITESPACE = _{ " " | "\t" | NEWLINE }
spaces = _{ WHITESPACE* }
COMMA = _{","}